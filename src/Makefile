# Makefile.in generated by automake 1.14.1 from Makefile.am.
# src/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994-2013 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



# This file is part of the honeybrid project.
#
# 2007-2009 University of Maryland (http://www.umd.edu)
# (Written by Robin Berthier <robinb@umd.edu>, Thomas Coquelin <coquelin@umd.edu> and Julien Vehent <julien@linuxwall.info> for the University of Maryland)
#
# 2012-2013 University of Connecticut (http://www.uconn.edu)
# (Extended by Tamas K Lengyel <tamas.k.lengyel@gmail.com>
#
# Honeybrid is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, see <http://www.gnu.org/licenses/>.


am__is_gnu_make = test -n '$(MAKEFILE_LIST)' && test -n '$(MAKELEVEL)'
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/honeybrid
pkgincludedir = $(includedir)/honeybrid
pkglibdir = $(libdir)/honeybrid
pkglibexecdir = $(libexecdir)/honeybrid
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
bin_PROGRAMS = honeybrid$(EXEEXT)
subdir = src
DIST_COMMON = $(srcdir)/Makefile.in $(srcdir)/Makefile.am \
	config_rules.c config_syntax.c $(top_srcdir)/depcomp \
	$(top_srcdir)/ylwrap
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/ax_check_compile_flag.m4 \
	$(top_srcdir)/m4/ax_check_link_flag.m4 $(top_srcdir)/m4/pkg.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__installdirs = "$(DESTDIR)$(bindir)"
PROGRAMS = $(bin_PROGRAMS)
am_honeybrid_OBJECTS = honeybrid-honeybrid.$(OBJEXT) \
	honeybrid-constants.$(OBJEXT) honeybrid-structs.$(OBJEXT) \
	honeybrid-convenience.$(OBJEXT) \
	honeybrid-connections.$(OBJEXT) \
	honeybrid-decision_engine.$(OBJEXT) \
	honeybrid-modules.$(OBJEXT) honeybrid-netcode.$(OBJEXT) \
	honeybrid-log.$(OBJEXT) honeybrid-err.$(OBJEXT) \
	honeybrid-daemon.$(OBJEXT) honeybrid-config_rules.$(OBJEXT) \
	honeybrid-config_syntax.$(OBJEXT) \
	honeybrid-mod_control.$(OBJEXT) \
	honeybrid-mod_counter.$(OBJEXT) honeybrid-mod_hash.$(OBJEXT) \
	honeybrid-mod_random.$(OBJEXT) honeybrid-mod_source.$(OBJEXT) \
	honeybrid-mod_source_time.$(OBJEXT) \
	honeybrid-mod_yesno.$(OBJEXT) honeybrid-mod_dionaea.$(OBJEXT) \
	honeybrid-mod_backpick_random.$(OBJEXT) \
	honeybrid-mod_vmi.$(OBJEXT)
honeybrid_OBJECTS = $(am_honeybrid_OBJECTS)
am__DEPENDENCIES_1 =
honeybrid_DEPENDENCIES = $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
honeybrid_LINK = $(CCLD) $(honeybrid_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
AM_V_P = $(am__v_P_$(V))
am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_$(V))
am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_$(V))
am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I. -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
AM_V_lt = $(am__v_lt_$(V))
am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))
am__v_lt_0 = --silent
am__v_lt_1 = 
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_$(V))
am__v_CC_ = $(am__v_CC_$(AM_DEFAULT_VERBOSITY))
am__v_CC_0 = @echo "  CC      " $@;
am__v_CC_1 = 
CCLD = $(CC)
LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_$(V))
am__v_CCLD_ = $(am__v_CCLD_$(AM_DEFAULT_VERBOSITY))
am__v_CCLD_0 = @echo "  CCLD    " $@;
am__v_CCLD_1 = 
LEXCOMPILE = $(LEX) $(AM_LFLAGS) $(LFLAGS)
AM_V_LEX = $(am__v_LEX_$(V))
am__v_LEX_ = $(am__v_LEX_$(AM_DEFAULT_VERBOSITY))
am__v_LEX_0 = @echo "  LEX     " $@;
am__v_LEX_1 = 
YLWRAP = $(top_srcdir)/ylwrap
am__yacc_c2h = sed -e s/cc$$/hh/ -e s/cpp$$/hpp/ -e s/cxx$$/hxx/ \
		   -e s/c++$$/h++/ -e s/c$$/h/
YACCCOMPILE = $(YACC) $(AM_YFLAGS) $(YFLAGS)
AM_V_YACC = $(am__v_YACC_$(V))
am__v_YACC_ = $(am__v_YACC_$(AM_DEFAULT_VERBOSITY))
am__v_YACC_0 = @echo "  YACC    " $@;
am__v_YACC_1 = 
SOURCES = $(honeybrid_SOURCES)
DIST_SOURCES = $(honeybrid_SOURCES)
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = aclocal-1.14
AMTAR = $${TAR-tar}
AM_DEFAULT_VERBOSITY = 1
AUTOCONF = autoconf
AUTOHEADER = autoheader
AUTOMAKE = automake-1.14
AWK = gawk
CC = gcc -std=gnu99
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2
CORE_LIBS =  -lnetfilter_queue -lpcap -ldumbnet
CPP = gcc -std=gnu99 -E
CPPFLAGS = 
CRYPTO_CFLAGS =  
CRYPTO_LIBS = -lcrypto  
CXX = g++
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -g -O2
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
EXEEXT = 
GLIB_CFLAGS = -pthread -I/usr/include/glib-2.0 -I/usr/lib/x86_64-linux-gnu/glib-2.0/include  
GLIB_LIBS = -pthread -lgthread-2.0 -lglib-2.0  
GREP = /bin/grep
HARDEN_CFLAGS =  -fno-strict-overflow -D_FORTIFY_SOURCE=2 -fstack-protector-all -Wstack-protector --param ssp-buffer-size=1 -fPIE
HARDEN_LDFLAGS =  -pie -Wl,-z,relro -Wl,-z,now
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LDFLAGS = 
LEX = flex
LEXLIB = 
LEX_OUTPUT_ROOT = 
LIBOBJS = 
LIBS = -lnfnetlink 
LTLIBOBJS = 
MAKEINFO = makeinfo
MKDIR_P = /bin/mkdir -p
MYSQL_CFLAGS = 
MYSQL_CONFIG = 
MYSQL_LIBS = 
OBJEXT = o
PACKAGE = honeybrid
PACKAGE_BUGREPORT = Tamas K Lengyel, tamas.k.lengyel@gmail.com
PACKAGE_NAME = honeybrid
PACKAGE_STRING = honeybrid 0.1.5
PACKAGE_TARNAME = honeybrid
PACKAGE_URL = 
PACKAGE_VERSION = 0.1.5
PATH_SEPARATOR = :
PKG_CONFIG = /usr/bin/pkg-config
PKG_CONFIG_LIBDIR = 
PKG_CONFIG_PATH = 
SET_MAKE = 
SHELL = /bin/bash
STRIP = 
VERSION = 0.1.5
XML2_CFLAGS = 
XML2_LIBS = 
XMPP_CFLAGS = 
XMPP_LIBS = 
YACC = yacc
YFLAGS = 
abs_builddir = /home/efan/Downloads/honeybrid-0.1.5/src
abs_srcdir = /home/efan/Downloads/honeybrid-0.1.5/src
abs_top_builddir = /home/efan/Downloads/honeybrid-0.1.5
abs_top_srcdir = /home/efan/Downloads/honeybrid-0.1.5
ac_ct_CC = gcc
ac_ct_CXX = g++
am__include = include
am__leading_dot = .
am__quote = 
am__tar = $${TAR-tar} chof - "$$tardir"
am__untar = $${TAR-tar} xf -
bindir = ${exec_prefix}/bin
build_alias = 
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
doc = 
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host_alias = 
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /home/efan/Downloads/honeybrid-0.1.5/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = $(MKDIR_P)
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /usr/local
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target_alias = 
top_build_prefix = ../
top_builddir = ..
top_srcdir = ..
xmpp_listener = 

# Compiler flags:
honeybrid_CFLAGS = $(CRYPTO_CFLAGS) $(GLIB_CFLAGS) $(XML2_CFLAGS) \
	$(MYSQL_CFLAGS) $(HARDEN_CFLAGS)

# Note that -pg is incompatable with $(HARDEN_LDFLAGS)
#AM_CFLAGS += -Wall -Wextra -g -ggdb3 -pg -DDEBUG

#honeybrid_LDADD = -lnfnetlink -lnetfilter_queue -lpcap -lcrypto
honeybrid_LDADD = $(CRYPTO_LIBS) $(XML2_LIBS) $(MYSQL_LIBS) \
	$(CORE_LIBS) $(HARDEN_LDFLAGS) $(GLIB_LIBS)

#AM_YFLAGS= -tvy -d -v
#AM_LFLAGS= -o$(LEX_OUTPUT_ROOT).c
honeybrid_SOURCES = honeybrid.c honeybrid.h types.h globals.h \
	constants.c constants.h structs.c structs.h convenience.c \
	convenience.h connections.c connections.h decision_engine.c \
	decision_engine.h modules.c modules.h netcode.c netcode.h \
	log.c log.h err.c daemon.c config_rules.y config_syntax.l \
	mod_control.c mod_counter.c mod_hash.c mod_random.c \
	mod_source.c mod_source_time.c mod_yesno.c mod_dionaea.c \
	mod_dionaea.h mod_backpick_random.c mod_vmi.c
all: all-am

.SUFFIXES:
.SUFFIXES: .c .l .o .obj .y
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign src/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign src/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(bindir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(bindir)" || exit 1; \
	fi; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p \
	  ; then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' \
	    -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	      echo " $(INSTALL_PROGRAM_ENV) $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	      $(INSTALL_PROGRAM_ENV) $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' \
	`; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(bindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(bindir)" && rm -f $$files

clean-binPROGRAMS:
	-test -z "$(bin_PROGRAMS)" || rm -f $(bin_PROGRAMS)

honeybrid$(EXEEXT): $(honeybrid_OBJECTS) $(honeybrid_DEPENDENCIES) $(EXTRA_honeybrid_DEPENDENCIES) 
	@rm -f honeybrid$(EXEEXT)
	$(AM_V_CCLD)$(honeybrid_LINK) $(honeybrid_OBJECTS) $(honeybrid_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/honeybrid-config_rules.Po
include ./$(DEPDIR)/honeybrid-config_syntax.Po
include ./$(DEPDIR)/honeybrid-connections.Po
include ./$(DEPDIR)/honeybrid-constants.Po
include ./$(DEPDIR)/honeybrid-convenience.Po
include ./$(DEPDIR)/honeybrid-daemon.Po
include ./$(DEPDIR)/honeybrid-decision_engine.Po
include ./$(DEPDIR)/honeybrid-err.Po
include ./$(DEPDIR)/honeybrid-honeybrid.Po
include ./$(DEPDIR)/honeybrid-log.Po
include ./$(DEPDIR)/honeybrid-mod_backpick_random.Po
include ./$(DEPDIR)/honeybrid-mod_control.Po
include ./$(DEPDIR)/honeybrid-mod_counter.Po
include ./$(DEPDIR)/honeybrid-mod_dionaea.Po
include ./$(DEPDIR)/honeybrid-mod_hash.Po
include ./$(DEPDIR)/honeybrid-mod_random.Po
include ./$(DEPDIR)/honeybrid-mod_source.Po
include ./$(DEPDIR)/honeybrid-mod_source_time.Po
include ./$(DEPDIR)/honeybrid-mod_vmi.Po
include ./$(DEPDIR)/honeybrid-mod_yesno.Po
include ./$(DEPDIR)/honeybrid-modules.Po
include ./$(DEPDIR)/honeybrid-netcode.Po
include ./$(DEPDIR)/honeybrid-structs.Po

.c.o:
	$(AM_V_CC)$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CC)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(COMPILE) -c -o $@ $<

.c.obj:
	$(AM_V_CC)$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CC)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(COMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

honeybrid-honeybrid.o: honeybrid.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(honeybrid_CFLAGS) $(CFLAGS) -MT honeybrid-honeybrid.o -MD -MP -MF $(DEPDIR)/honeybrid-honeybrid.Tpo -c -o honeybrid-honeybrid.o `test -f 'honeybrid.c' || echo '$(srcdir)/'`honeybrid.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/honeybrid-honeybrid.Tpo $(DEPDIR)/honeybrid-honeybrid.Po
#	$(AM_V_CC)source='honeybrid.c' object='honeybrid-honeybrid.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(honeybrid_CFLAGS) $(CFLAGS) -c -o honeybrid-honeybrid.o `test -f 'honeybrid.c' || echo '$(srcdir)/'`honeybrid.c

honeybrid-honeybrid.obj: honeybrid.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(honeybrid_CFLAGS) $(CFLAGS) -MT honeybrid-honeybrid.obj -MD -MP -MF $(DEPDIR)/honeybrid-honeybrid.Tpo -c -o honeybrid-honeybrid.obj `if test -f 'honeybrid.c'; then $(CYGPATH_W) 'honeybrid.c'; else $(CYGPATH_W) '$(srcdir)/honeybrid.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/honeybrid-honeybrid.Tpo $(DEPDIR)/honeybrid-honeybrid.Po
#	$(AM_V_CC)source='honeybrid.c' object='honeybrid-honeybrid.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(honeybrid_CFLAGS) $(CFLAGS) -c -o honeybrid-honeybrid.obj `if test -f 'honeybrid.c'; then $(CYGPATH_W) 'honeybrid.c'; else $(CYGPATH_W) '$(srcdir)/honeybrid.c'; fi`

honeybrid-constants.o: constants.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(honeybrid_CFLAGS) $(CFLAGS) -MT honeybrid-constants.o -MD -MP -MF $(DEPDIR)/honeybrid-constants.Tpo -c -o honeybrid-constants.o `test -f 'constants.c' || echo '$(srcdir)/'`constants.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/honeybrid-constants.Tpo $(DEPDIR)/honeybrid-constants.Po
#	$(AM_V_CC)source='constants.c' object='honeybrid-constants.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(honeybrid_CFLAGS) $(CFLAGS) -c -o honeybrid-constants.o `test -f 'constants.c' || echo '$(srcdir)/'`constants.c

honeybrid-constants.obj: constants.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(honeybrid_CFLAGS) $(CFLAGS) -MT honeybrid-constants.obj -MD -MP -MF $(DEPDIR)/honeybrid-constants.Tpo -c -o honeybrid-constants.obj `if test -f 'constants.c'; then $(CYGPATH_W) 'constants.c'; else $(CYGPATH_W) '$(srcdir)/constants.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/honeybrid-constants.Tpo $(DEPDIR)/honeybrid-constants.Po
#	$(AM_V_CC)source='constants.c' object='honeybrid-constants.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(honeybrid_CFLAGS) $(CFLAGS) -c -o honeybrid-constants.obj `if test -f 'constants.c'; then $(CYGPATH_W) 'constants.c'; else $(CYGPATH_W) '$(srcdir)/constants.c'; fi`

honeybrid-structs.o: structs.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(honeybrid_CFLAGS) $(CFLAGS) -MT honeybrid-structs.o -MD -MP -MF $(DEPDIR)/honeybrid-structs.Tpo -c -o honeybrid-structs.o `test -f 'structs.c' || echo '$(srcdir)/'`structs.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/honeybrid-structs.Tpo $(DEPDIR)/honeybrid-structs.Po
#	$(AM_V_CC)source='structs.c' object='honeybrid-structs.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(honeybrid_CFLAGS) $(CFLAGS) -c -o honeybrid-structs.o `test -f 'structs.c' || echo '$(srcdir)/'`structs.c

honeybrid-structs.obj: structs.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(honeybrid_CFLAGS) $(CFLAGS) -MT honeybrid-structs.obj -MD -MP -MF $(DEPDIR)/honeybrid-structs.Tpo -c -o honeybrid-structs.obj `if test -f 'structs.c'; then $(CYGPATH_W) 'structs.c'; else $(CYGPATH_W) '$(srcdir)/structs.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/honeybrid-structs.Tpo $(DEPDIR)/honeybrid-structs.Po
#	$(AM_V_CC)source='structs.c' object='honeybrid-structs.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(honeybrid_CFLAGS) $(CFLAGS) -c -o honeybrid-structs.obj `if test -f 'structs.c'; then $(CYGPATH_W) 'structs.c'; else $(CYGPATH_W) '$(srcdir)/structs.c'; fi`

honeybrid-convenience.o: convenience.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(honeybrid_CFLAGS) $(CFLAGS) -MT honeybrid-convenience.o -MD -MP -MF $(DEPDIR)/honeybrid-convenience.Tpo -c -o honeybrid-convenience.o `test -f 'convenience.c' || echo '$(srcdir)/'`convenience.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/honeybrid-convenience.Tpo $(DEPDIR)/honeybrid-convenience.Po
#	$(AM_V_CC)source='convenience.c' object='honeybrid-convenience.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(honeybrid_CFLAGS) $(CFLAGS) -c -o honeybrid-convenience.o `test -f 'convenience.c' || echo '$(srcdir)/'`convenience.c

honeybrid-convenience.obj: convenience.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(honeybrid_CFLAGS) $(CFLAGS) -MT honeybrid-convenience.obj -MD -MP -MF $(DEPDIR)/honeybrid-convenience.Tpo -c -o honeybrid-convenience.obj `if test -f 'convenience.c'; then $(CYGPATH_W) 'convenience.c'; else $(CYGPATH_W) '$(srcdir)/convenience.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/honeybrid-convenience.Tpo $(DEPDIR)/honeybrid-convenience.Po
#	$(AM_V_CC)source='convenience.c' object='honeybrid-convenience.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(honeybrid_CFLAGS) $(CFLAGS) -c -o honeybrid-convenience.obj `if test -f 'convenience.c'; then $(CYGPATH_W) 'convenience.c'; else $(CYGPATH_W) '$(srcdir)/convenience.c'; fi`

honeybrid-connections.o: connections.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(honeybrid_CFLAGS) $(CFLAGS) -MT honeybrid-connections.o -MD -MP -MF $(DEPDIR)/honeybrid-connections.Tpo -c -o honeybrid-connections.o `test -f 'connections.c' || echo '$(srcdir)/'`connections.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/honeybrid-connections.Tpo $(DEPDIR)/honeybrid-connections.Po
#	$(AM_V_CC)source='connections.c' object='honeybrid-connections.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(honeybrid_CFLAGS) $(CFLAGS) -c -o honeybrid-connections.o `test -f 'connections.c' || echo '$(srcdir)/'`connections.c

honeybrid-connections.obj: connections.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(honeybrid_CFLAGS) $(CFLAGS) -MT honeybrid-connections.obj -MD -MP -MF $(DEPDIR)/honeybrid-connections.Tpo -c -o honeybrid-connections.obj `if test -f 'connections.c'; then $(CYGPATH_W) 'connections.c'; else $(CYGPATH_W) '$(srcdir)/connections.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/honeybrid-connections.Tpo $(DEPDIR)/honeybrid-connections.Po
#	$(AM_V_CC)source='connections.c' object='honeybrid-connections.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(honeybrid_CFLAGS) $(CFLAGS) -c -o honeybrid-connections.obj `if test -f 'connections.c'; then $(CYGPATH_W) 'connections.c'; else $(CYGPATH_W) '$(srcdir)/connections.c'; fi`

honeybrid-decision_engine.o: decision_engine.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(honeybrid_CFLAGS) $(CFLAGS) -MT honeybrid-decision_engine.o -MD -MP -MF $(DEPDIR)/honeybrid-decision_engine.Tpo -c -o honeybrid-decision_engine.o `test -f 'decision_engine.c' || echo '$(srcdir)/'`decision_engine.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/honeybrid-decision_engine.Tpo $(DEPDIR)/honeybrid-decision_engine.Po
#	$(AM_V_CC)source='decision_engine.c' object='honeybrid-decision_engine.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(honeybrid_CFLAGS) $(CFLAGS) -c -o honeybrid-decision_engine.o `test -f 'decision_engine.c' || echo '$(srcdir)/'`decision_engine.c

honeybrid-decision_engine.obj: decision_engine.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(honeybrid_CFLAGS) $(CFLAGS) -MT honeybrid-decision_engine.obj -MD -MP -MF $(DEPDIR)/honeybrid-decision_engine.Tpo -c -o honeybrid-decision_engine.obj `if test -f 'decision_engine.c'; then $(CYGPATH_W) 'decision_engine.c'; else $(CYGPATH_W) '$(srcdir)/decision_engine.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/honeybrid-decision_engine.Tpo $(DEPDIR)/honeybrid-decision_engine.Po
#	$(AM_V_CC)source='decision_engine.c' object='honeybrid-decision_engine.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(honeybrid_CFLAGS) $(CFLAGS) -c -o honeybrid-decision_engine.obj `if test -f 'decision_engine.c'; then $(CYGPATH_W) 'decision_engine.c'; else $(CYGPATH_W) '$(srcdir)/decision_engine.c'; fi`

honeybrid-modules.o: modules.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(honeybrid_CFLAGS) $(CFLAGS) -MT honeybrid-modules.o -MD -MP -MF $(DEPDIR)/honeybrid-modules.Tpo -c -o honeybrid-modules.o `test -f 'modules.c' || echo '$(srcdir)/'`modules.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/honeybrid-modules.Tpo $(DEPDIR)/honeybrid-modules.Po
#	$(AM_V_CC)source='modules.c' object='honeybrid-modules.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(honeybrid_CFLAGS) $(CFLAGS) -c -o honeybrid-modules.o `test -f 'modules.c' || echo '$(srcdir)/'`modules.c

honeybrid-modules.obj: modules.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(honeybrid_CFLAGS) $(CFLAGS) -MT honeybrid-modules.obj -MD -MP -MF $(DEPDIR)/honeybrid-modules.Tpo -c -o honeybrid-modules.obj `if test -f 'modules.c'; then $(CYGPATH_W) 'modules.c'; else $(CYGPATH_W) '$(srcdir)/modules.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/honeybrid-modules.Tpo $(DEPDIR)/honeybrid-modules.Po
#	$(AM_V_CC)source='modules.c' object='honeybrid-modules.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(honeybrid_CFLAGS) $(CFLAGS) -c -o honeybrid-modules.obj `if test -f 'modules.c'; then $(CYGPATH_W) 'modules.c'; else $(CYGPATH_W) '$(srcdir)/modules.c'; fi`

honeybrid-netcode.o: netcode.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(honeybrid_CFLAGS) $(CFLAGS) -MT honeybrid-netcode.o -MD -MP -MF $(DEPDIR)/honeybrid-netcode.Tpo -c -o honeybrid-netcode.o `test -f 'netcode.c' || echo '$(srcdir)/'`netcode.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/honeybrid-netcode.Tpo $(DEPDIR)/honeybrid-netcode.Po
#	$(AM_V_CC)source='netcode.c' object='honeybrid-netcode.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(honeybrid_CFLAGS) $(CFLAGS) -c -o honeybrid-netcode.o `test -f 'netcode.c' || echo '$(srcdir)/'`netcode.c

honeybrid-netcode.obj: netcode.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(honeybrid_CFLAGS) $(CFLAGS) -MT honeybrid-netcode.obj -MD -MP -MF $(DEPDIR)/honeybrid-netcode.Tpo -c -o honeybrid-netcode.obj `if test -f 'netcode.c'; then $(CYGPATH_W) 'netcode.c'; else $(CYGPATH_W) '$(srcdir)/netcode.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/honeybrid-netcode.Tpo $(DEPDIR)/honeybrid-netcode.Po
#	$(AM_V_CC)source='netcode.c' object='honeybrid-netcode.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(honeybrid_CFLAGS) $(CFLAGS) -c -o honeybrid-netcode.obj `if test -f 'netcode.c'; then $(CYGPATH_W) 'netcode.c'; else $(CYGPATH_W) '$(srcdir)/netcode.c'; fi`

honeybrid-log.o: log.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(honeybrid_CFLAGS) $(CFLAGS) -MT honeybrid-log.o -MD -MP -MF $(DEPDIR)/honeybrid-log.Tpo -c -o honeybrid-log.o `test -f 'log.c' || echo '$(srcdir)/'`log.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/honeybrid-log.Tpo $(DEPDIR)/honeybrid-log.Po
#	$(AM_V_CC)source='log.c' object='honeybrid-log.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(honeybrid_CFLAGS) $(CFLAGS) -c -o honeybrid-log.o `test -f 'log.c' || echo '$(srcdir)/'`log.c

honeybrid-log.obj: log.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(honeybrid_CFLAGS) $(CFLAGS) -MT honeybrid-log.obj -MD -MP -MF $(DEPDIR)/honeybrid-log.Tpo -c -o honeybrid-log.obj `if test -f 'log.c'; then $(CYGPATH_W) 'log.c'; else $(CYGPATH_W) '$(srcdir)/log.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/honeybrid-log.Tpo $(DEPDIR)/honeybrid-log.Po
#	$(AM_V_CC)source='log.c' object='honeybrid-log.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(honeybrid_CFLAGS) $(CFLAGS) -c -o honeybrid-log.obj `if test -f 'log.c'; then $(CYGPATH_W) 'log.c'; else $(CYGPATH_W) '$(srcdir)/log.c'; fi`

honeybrid-err.o: err.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(honeybrid_CFLAGS) $(CFLAGS) -MT honeybrid-err.o -MD -MP -MF $(DEPDIR)/honeybrid-err.Tpo -c -o honeybrid-err.o `test -f 'err.c' || echo '$(srcdir)/'`err.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/honeybrid-err.Tpo $(DEPDIR)/honeybrid-err.Po
#	$(AM_V_CC)source='err.c' object='honeybrid-err.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(honeybrid_CFLAGS) $(CFLAGS) -c -o honeybrid-err.o `test -f 'err.c' || echo '$(srcdir)/'`err.c

honeybrid-err.obj: err.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(honeybrid_CFLAGS) $(CFLAGS) -MT honeybrid-err.obj -MD -MP -MF $(DEPDIR)/honeybrid-err.Tpo -c -o honeybrid-err.obj `if test -f 'err.c'; then $(CYGPATH_W) 'err.c'; else $(CYGPATH_W) '$(srcdir)/err.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/honeybrid-err.Tpo $(DEPDIR)/honeybrid-err.Po
#	$(AM_V_CC)source='err.c' object='honeybrid-err.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(honeybrid_CFLAGS) $(CFLAGS) -c -o honeybrid-err.obj `if test -f 'err.c'; then $(CYGPATH_W) 'err.c'; else $(CYGPATH_W) '$(srcdir)/err.c'; fi`

honeybrid-daemon.o: daemon.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(honeybrid_CFLAGS) $(CFLAGS) -MT honeybrid-daemon.o -MD -MP -MF $(DEPDIR)/honeybrid-daemon.Tpo -c -o honeybrid-daemon.o `test -f 'daemon.c' || echo '$(srcdir)/'`daemon.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/honeybrid-daemon.Tpo $(DEPDIR)/honeybrid-daemon.Po
#	$(AM_V_CC)source='daemon.c' object='honeybrid-daemon.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(honeybrid_CFLAGS) $(CFLAGS) -c -o honeybrid-daemon.o `test -f 'daemon.c' || echo '$(srcdir)/'`daemon.c

honeybrid-daemon.obj: daemon.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(honeybrid_CFLAGS) $(CFLAGS) -MT honeybrid-daemon.obj -MD -MP -MF $(DEPDIR)/honeybrid-daemon.Tpo -c -o honeybrid-daemon.obj `if test -f 'daemon.c'; then $(CYGPATH_W) 'daemon.c'; else $(CYGPATH_W) '$(srcdir)/daemon.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/honeybrid-daemon.Tpo $(DEPDIR)/honeybrid-daemon.Po
#	$(AM_V_CC)source='daemon.c' object='honeybrid-daemon.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(honeybrid_CFLAGS) $(CFLAGS) -c -o honeybrid-daemon.obj `if test -f 'daemon.c'; then $(CYGPATH_W) 'daemon.c'; else $(CYGPATH_W) '$(srcdir)/daemon.c'; fi`

honeybrid-config_rules.o: config_rules.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(honeybrid_CFLAGS) $(CFLAGS) -MT honeybrid-config_rules.o -MD -MP -MF $(DEPDIR)/honeybrid-config_rules.Tpo -c -o honeybrid-config_rules.o `test -f 'config_rules.c' || echo '$(srcdir)/'`config_rules.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/honeybrid-config_rules.Tpo $(DEPDIR)/honeybrid-config_rules.Po
#	$(AM_V_CC)source='config_rules.c' object='honeybrid-config_rules.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(honeybrid_CFLAGS) $(CFLAGS) -c -o honeybrid-config_rules.o `test -f 'config_rules.c' || echo '$(srcdir)/'`config_rules.c

honeybrid-config_rules.obj: config_rules.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(honeybrid_CFLAGS) $(CFLAGS) -MT honeybrid-config_rules.obj -MD -MP -MF $(DEPDIR)/honeybrid-config_rules.Tpo -c -o honeybrid-config_rules.obj `if test -f 'config_rules.c'; then $(CYGPATH_W) 'config_rules.c'; else $(CYGPATH_W) '$(srcdir)/config_rules.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/honeybrid-config_rules.Tpo $(DEPDIR)/honeybrid-config_rules.Po
#	$(AM_V_CC)source='config_rules.c' object='honeybrid-config_rules.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(honeybrid_CFLAGS) $(CFLAGS) -c -o honeybrid-config_rules.obj `if test -f 'config_rules.c'; then $(CYGPATH_W) 'config_rules.c'; else $(CYGPATH_W) '$(srcdir)/config_rules.c'; fi`

honeybrid-config_syntax.o: config_syntax.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(honeybrid_CFLAGS) $(CFLAGS) -MT honeybrid-config_syntax.o -MD -MP -MF $(DEPDIR)/honeybrid-config_syntax.Tpo -c -o honeybrid-config_syntax.o `test -f 'config_syntax.c' || echo '$(srcdir)/'`config_syntax.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/honeybrid-config_syntax.Tpo $(DEPDIR)/honeybrid-config_syntax.Po
#	$(AM_V_CC)source='config_syntax.c' object='honeybrid-config_syntax.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(honeybrid_CFLAGS) $(CFLAGS) -c -o honeybrid-config_syntax.o `test -f 'config_syntax.c' || echo '$(srcdir)/'`config_syntax.c

honeybrid-config_syntax.obj: config_syntax.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(honeybrid_CFLAGS) $(CFLAGS) -MT honeybrid-config_syntax.obj -MD -MP -MF $(DEPDIR)/honeybrid-config_syntax.Tpo -c -o honeybrid-config_syntax.obj `if test -f 'config_syntax.c'; then $(CYGPATH_W) 'config_syntax.c'; else $(CYGPATH_W) '$(srcdir)/config_syntax.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/honeybrid-config_syntax.Tpo $(DEPDIR)/honeybrid-config_syntax.Po
#	$(AM_V_CC)source='config_syntax.c' object='honeybrid-config_syntax.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(honeybrid_CFLAGS) $(CFLAGS) -c -o honeybrid-config_syntax.obj `if test -f 'config_syntax.c'; then $(CYGPATH_W) 'config_syntax.c'; else $(CYGPATH_W) '$(srcdir)/config_syntax.c'; fi`

honeybrid-mod_control.o: mod_control.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(honeybrid_CFLAGS) $(CFLAGS) -MT honeybrid-mod_control.o -MD -MP -MF $(DEPDIR)/honeybrid-mod_control.Tpo -c -o honeybrid-mod_control.o `test -f 'mod_control.c' || echo '$(srcdir)/'`mod_control.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/honeybrid-mod_control.Tpo $(DEPDIR)/honeybrid-mod_control.Po
#	$(AM_V_CC)source='mod_control.c' object='honeybrid-mod_control.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(honeybrid_CFLAGS) $(CFLAGS) -c -o honeybrid-mod_control.o `test -f 'mod_control.c' || echo '$(srcdir)/'`mod_control.c

honeybrid-mod_control.obj: mod_control.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(honeybrid_CFLAGS) $(CFLAGS) -MT honeybrid-mod_control.obj -MD -MP -MF $(DEPDIR)/honeybrid-mod_control.Tpo -c -o honeybrid-mod_control.obj `if test -f 'mod_control.c'; then $(CYGPATH_W) 'mod_control.c'; else $(CYGPATH_W) '$(srcdir)/mod_control.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/honeybrid-mod_control.Tpo $(DEPDIR)/honeybrid-mod_control.Po
#	$(AM_V_CC)source='mod_control.c' object='honeybrid-mod_control.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(honeybrid_CFLAGS) $(CFLAGS) -c -o honeybrid-mod_control.obj `if test -f 'mod_control.c'; then $(CYGPATH_W) 'mod_control.c'; else $(CYGPATH_W) '$(srcdir)/mod_control.c'; fi`

honeybrid-mod_counter.o: mod_counter.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(honeybrid_CFLAGS) $(CFLAGS) -MT honeybrid-mod_counter.o -MD -MP -MF $(DEPDIR)/honeybrid-mod_counter.Tpo -c -o honeybrid-mod_counter.o `test -f 'mod_counter.c' || echo '$(srcdir)/'`mod_counter.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/honeybrid-mod_counter.Tpo $(DEPDIR)/honeybrid-mod_counter.Po
#	$(AM_V_CC)source='mod_counter.c' object='honeybrid-mod_counter.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(honeybrid_CFLAGS) $(CFLAGS) -c -o honeybrid-mod_counter.o `test -f 'mod_counter.c' || echo '$(srcdir)/'`mod_counter.c

honeybrid-mod_counter.obj: mod_counter.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(honeybrid_CFLAGS) $(CFLAGS) -MT honeybrid-mod_counter.obj -MD -MP -MF $(DEPDIR)/honeybrid-mod_counter.Tpo -c -o honeybrid-mod_counter.obj `if test -f 'mod_counter.c'; then $(CYGPATH_W) 'mod_counter.c'; else $(CYGPATH_W) '$(srcdir)/mod_counter.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/honeybrid-mod_counter.Tpo $(DEPDIR)/honeybrid-mod_counter.Po
#	$(AM_V_CC)source='mod_counter.c' object='honeybrid-mod_counter.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(honeybrid_CFLAGS) $(CFLAGS) -c -o honeybrid-mod_counter.obj `if test -f 'mod_counter.c'; then $(CYGPATH_W) 'mod_counter.c'; else $(CYGPATH_W) '$(srcdir)/mod_counter.c'; fi`

honeybrid-mod_hash.o: mod_hash.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(honeybrid_CFLAGS) $(CFLAGS) -MT honeybrid-mod_hash.o -MD -MP -MF $(DEPDIR)/honeybrid-mod_hash.Tpo -c -o honeybrid-mod_hash.o `test -f 'mod_hash.c' || echo '$(srcdir)/'`mod_hash.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/honeybrid-mod_hash.Tpo $(DEPDIR)/honeybrid-mod_hash.Po
#	$(AM_V_CC)source='mod_hash.c' object='honeybrid-mod_hash.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(honeybrid_CFLAGS) $(CFLAGS) -c -o honeybrid-mod_hash.o `test -f 'mod_hash.c' || echo '$(srcdir)/'`mod_hash.c

honeybrid-mod_hash.obj: mod_hash.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(honeybrid_CFLAGS) $(CFLAGS) -MT honeybrid-mod_hash.obj -MD -MP -MF $(DEPDIR)/honeybrid-mod_hash.Tpo -c -o honeybrid-mod_hash.obj `if test -f 'mod_hash.c'; then $(CYGPATH_W) 'mod_hash.c'; else $(CYGPATH_W) '$(srcdir)/mod_hash.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/honeybrid-mod_hash.Tpo $(DEPDIR)/honeybrid-mod_hash.Po
#	$(AM_V_CC)source='mod_hash.c' object='honeybrid-mod_hash.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(honeybrid_CFLAGS) $(CFLAGS) -c -o honeybrid-mod_hash.obj `if test -f 'mod_hash.c'; then $(CYGPATH_W) 'mod_hash.c'; else $(CYGPATH_W) '$(srcdir)/mod_hash.c'; fi`

honeybrid-mod_random.o: mod_random.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(honeybrid_CFLAGS) $(CFLAGS) -MT honeybrid-mod_random.o -MD -MP -MF $(DEPDIR)/honeybrid-mod_random.Tpo -c -o honeybrid-mod_random.o `test -f 'mod_random.c' || echo '$(srcdir)/'`mod_random.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/honeybrid-mod_random.Tpo $(DEPDIR)/honeybrid-mod_random.Po
#	$(AM_V_CC)source='mod_random.c' object='honeybrid-mod_random.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(honeybrid_CFLAGS) $(CFLAGS) -c -o honeybrid-mod_random.o `test -f 'mod_random.c' || echo '$(srcdir)/'`mod_random.c

honeybrid-mod_random.obj: mod_random.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(honeybrid_CFLAGS) $(CFLAGS) -MT honeybrid-mod_random.obj -MD -MP -MF $(DEPDIR)/honeybrid-mod_random.Tpo -c -o honeybrid-mod_random.obj `if test -f 'mod_random.c'; then $(CYGPATH_W) 'mod_random.c'; else $(CYGPATH_W) '$(srcdir)/mod_random.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/honeybrid-mod_random.Tpo $(DEPDIR)/honeybrid-mod_random.Po
#	$(AM_V_CC)source='mod_random.c' object='honeybrid-mod_random.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(honeybrid_CFLAGS) $(CFLAGS) -c -o honeybrid-mod_random.obj `if test -f 'mod_random.c'; then $(CYGPATH_W) 'mod_random.c'; else $(CYGPATH_W) '$(srcdir)/mod_random.c'; fi`

honeybrid-mod_source.o: mod_source.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(honeybrid_CFLAGS) $(CFLAGS) -MT honeybrid-mod_source.o -MD -MP -MF $(DEPDIR)/honeybrid-mod_source.Tpo -c -o honeybrid-mod_source.o `test -f 'mod_source.c' || echo '$(srcdir)/'`mod_source.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/honeybrid-mod_source.Tpo $(DEPDIR)/honeybrid-mod_source.Po
#	$(AM_V_CC)source='mod_source.c' object='honeybrid-mod_source.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(honeybrid_CFLAGS) $(CFLAGS) -c -o honeybrid-mod_source.o `test -f 'mod_source.c' || echo '$(srcdir)/'`mod_source.c

honeybrid-mod_source.obj: mod_source.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(honeybrid_CFLAGS) $(CFLAGS) -MT honeybrid-mod_source.obj -MD -MP -MF $(DEPDIR)/honeybrid-mod_source.Tpo -c -o honeybrid-mod_source.obj `if test -f 'mod_source.c'; then $(CYGPATH_W) 'mod_source.c'; else $(CYGPATH_W) '$(srcdir)/mod_source.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/honeybrid-mod_source.Tpo $(DEPDIR)/honeybrid-mod_source.Po
#	$(AM_V_CC)source='mod_source.c' object='honeybrid-mod_source.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(honeybrid_CFLAGS) $(CFLAGS) -c -o honeybrid-mod_source.obj `if test -f 'mod_source.c'; then $(CYGPATH_W) 'mod_source.c'; else $(CYGPATH_W) '$(srcdir)/mod_source.c'; fi`

honeybrid-mod_source_time.o: mod_source_time.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(honeybrid_CFLAGS) $(CFLAGS) -MT honeybrid-mod_source_time.o -MD -MP -MF $(DEPDIR)/honeybrid-mod_source_time.Tpo -c -o honeybrid-mod_source_time.o `test -f 'mod_source_time.c' || echo '$(srcdir)/'`mod_source_time.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/honeybrid-mod_source_time.Tpo $(DEPDIR)/honeybrid-mod_source_time.Po
#	$(AM_V_CC)source='mod_source_time.c' object='honeybrid-mod_source_time.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(honeybrid_CFLAGS) $(CFLAGS) -c -o honeybrid-mod_source_time.o `test -f 'mod_source_time.c' || echo '$(srcdir)/'`mod_source_time.c

honeybrid-mod_source_time.obj: mod_source_time.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(honeybrid_CFLAGS) $(CFLAGS) -MT honeybrid-mod_source_time.obj -MD -MP -MF $(DEPDIR)/honeybrid-mod_source_time.Tpo -c -o honeybrid-mod_source_time.obj `if test -f 'mod_source_time.c'; then $(CYGPATH_W) 'mod_source_time.c'; else $(CYGPATH_W) '$(srcdir)/mod_source_time.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/honeybrid-mod_source_time.Tpo $(DEPDIR)/honeybrid-mod_source_time.Po
#	$(AM_V_CC)source='mod_source_time.c' object='honeybrid-mod_source_time.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(honeybrid_CFLAGS) $(CFLAGS) -c -o honeybrid-mod_source_time.obj `if test -f 'mod_source_time.c'; then $(CYGPATH_W) 'mod_source_time.c'; else $(CYGPATH_W) '$(srcdir)/mod_source_time.c'; fi`

honeybrid-mod_yesno.o: mod_yesno.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(honeybrid_CFLAGS) $(CFLAGS) -MT honeybrid-mod_yesno.o -MD -MP -MF $(DEPDIR)/honeybrid-mod_yesno.Tpo -c -o honeybrid-mod_yesno.o `test -f 'mod_yesno.c' || echo '$(srcdir)/'`mod_yesno.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/honeybrid-mod_yesno.Tpo $(DEPDIR)/honeybrid-mod_yesno.Po
#	$(AM_V_CC)source='mod_yesno.c' object='honeybrid-mod_yesno.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(honeybrid_CFLAGS) $(CFLAGS) -c -o honeybrid-mod_yesno.o `test -f 'mod_yesno.c' || echo '$(srcdir)/'`mod_yesno.c

honeybrid-mod_yesno.obj: mod_yesno.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(honeybrid_CFLAGS) $(CFLAGS) -MT honeybrid-mod_yesno.obj -MD -MP -MF $(DEPDIR)/honeybrid-mod_yesno.Tpo -c -o honeybrid-mod_yesno.obj `if test -f 'mod_yesno.c'; then $(CYGPATH_W) 'mod_yesno.c'; else $(CYGPATH_W) '$(srcdir)/mod_yesno.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/honeybrid-mod_yesno.Tpo $(DEPDIR)/honeybrid-mod_yesno.Po
#	$(AM_V_CC)source='mod_yesno.c' object='honeybrid-mod_yesno.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(honeybrid_CFLAGS) $(CFLAGS) -c -o honeybrid-mod_yesno.obj `if test -f 'mod_yesno.c'; then $(CYGPATH_W) 'mod_yesno.c'; else $(CYGPATH_W) '$(srcdir)/mod_yesno.c'; fi`

honeybrid-mod_dionaea.o: mod_dionaea.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(honeybrid_CFLAGS) $(CFLAGS) -MT honeybrid-mod_dionaea.o -MD -MP -MF $(DEPDIR)/honeybrid-mod_dionaea.Tpo -c -o honeybrid-mod_dionaea.o `test -f 'mod_dionaea.c' || echo '$(srcdir)/'`mod_dionaea.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/honeybrid-mod_dionaea.Tpo $(DEPDIR)/honeybrid-mod_dionaea.Po
#	$(AM_V_CC)source='mod_dionaea.c' object='honeybrid-mod_dionaea.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(honeybrid_CFLAGS) $(CFLAGS) -c -o honeybrid-mod_dionaea.o `test -f 'mod_dionaea.c' || echo '$(srcdir)/'`mod_dionaea.c

honeybrid-mod_dionaea.obj: mod_dionaea.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(honeybrid_CFLAGS) $(CFLAGS) -MT honeybrid-mod_dionaea.obj -MD -MP -MF $(DEPDIR)/honeybrid-mod_dionaea.Tpo -c -o honeybrid-mod_dionaea.obj `if test -f 'mod_dionaea.c'; then $(CYGPATH_W) 'mod_dionaea.c'; else $(CYGPATH_W) '$(srcdir)/mod_dionaea.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/honeybrid-mod_dionaea.Tpo $(DEPDIR)/honeybrid-mod_dionaea.Po
#	$(AM_V_CC)source='mod_dionaea.c' object='honeybrid-mod_dionaea.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(honeybrid_CFLAGS) $(CFLAGS) -c -o honeybrid-mod_dionaea.obj `if test -f 'mod_dionaea.c'; then $(CYGPATH_W) 'mod_dionaea.c'; else $(CYGPATH_W) '$(srcdir)/mod_dionaea.c'; fi`

honeybrid-mod_backpick_random.o: mod_backpick_random.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(honeybrid_CFLAGS) $(CFLAGS) -MT honeybrid-mod_backpick_random.o -MD -MP -MF $(DEPDIR)/honeybrid-mod_backpick_random.Tpo -c -o honeybrid-mod_backpick_random.o `test -f 'mod_backpick_random.c' || echo '$(srcdir)/'`mod_backpick_random.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/honeybrid-mod_backpick_random.Tpo $(DEPDIR)/honeybrid-mod_backpick_random.Po
#	$(AM_V_CC)source='mod_backpick_random.c' object='honeybrid-mod_backpick_random.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(honeybrid_CFLAGS) $(CFLAGS) -c -o honeybrid-mod_backpick_random.o `test -f 'mod_backpick_random.c' || echo '$(srcdir)/'`mod_backpick_random.c

honeybrid-mod_backpick_random.obj: mod_backpick_random.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(honeybrid_CFLAGS) $(CFLAGS) -MT honeybrid-mod_backpick_random.obj -MD -MP -MF $(DEPDIR)/honeybrid-mod_backpick_random.Tpo -c -o honeybrid-mod_backpick_random.obj `if test -f 'mod_backpick_random.c'; then $(CYGPATH_W) 'mod_backpick_random.c'; else $(CYGPATH_W) '$(srcdir)/mod_backpick_random.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/honeybrid-mod_backpick_random.Tpo $(DEPDIR)/honeybrid-mod_backpick_random.Po
#	$(AM_V_CC)source='mod_backpick_random.c' object='honeybrid-mod_backpick_random.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(honeybrid_CFLAGS) $(CFLAGS) -c -o honeybrid-mod_backpick_random.obj `if test -f 'mod_backpick_random.c'; then $(CYGPATH_W) 'mod_backpick_random.c'; else $(CYGPATH_W) '$(srcdir)/mod_backpick_random.c'; fi`

honeybrid-mod_vmi.o: mod_vmi.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(honeybrid_CFLAGS) $(CFLAGS) -MT honeybrid-mod_vmi.o -MD -MP -MF $(DEPDIR)/honeybrid-mod_vmi.Tpo -c -o honeybrid-mod_vmi.o `test -f 'mod_vmi.c' || echo '$(srcdir)/'`mod_vmi.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/honeybrid-mod_vmi.Tpo $(DEPDIR)/honeybrid-mod_vmi.Po
#	$(AM_V_CC)source='mod_vmi.c' object='honeybrid-mod_vmi.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(honeybrid_CFLAGS) $(CFLAGS) -c -o honeybrid-mod_vmi.o `test -f 'mod_vmi.c' || echo '$(srcdir)/'`mod_vmi.c

honeybrid-mod_vmi.obj: mod_vmi.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(honeybrid_CFLAGS) $(CFLAGS) -MT honeybrid-mod_vmi.obj -MD -MP -MF $(DEPDIR)/honeybrid-mod_vmi.Tpo -c -o honeybrid-mod_vmi.obj `if test -f 'mod_vmi.c'; then $(CYGPATH_W) 'mod_vmi.c'; else $(CYGPATH_W) '$(srcdir)/mod_vmi.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/honeybrid-mod_vmi.Tpo $(DEPDIR)/honeybrid-mod_vmi.Po
#	$(AM_V_CC)source='mod_vmi.c' object='honeybrid-mod_vmi.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(honeybrid_CFLAGS) $(CFLAGS) -c -o honeybrid-mod_vmi.obj `if test -f 'mod_vmi.c'; then $(CYGPATH_W) 'mod_vmi.c'; else $(CYGPATH_W) '$(srcdir)/mod_vmi.c'; fi`

.l.c:
	$(AM_V_LEX)$(am__skiplex) $(SHELL) $(YLWRAP) $< $(LEX_OUTPUT_ROOT).c $@ -- $(LEXCOMPILE)

.y.c:
	$(AM_V_YACC)$(am__skipyacc) $(SHELL) $(YLWRAP) $< y.tab.c $@ y.tab.h `echo $@ | $(am__yacc_c2h)` y.output $*.output -- $(YACCCOMPILE)

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-am
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-am

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-am

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(PROGRAMS)
installdirs:
	for dir in "$(DESTDIR)$(bindir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-rm -f config_rules.c
	-rm -f config_syntax.c
clean: clean-am

clean-am: clean-binPROGRAMS clean-generic mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-binPROGRAMS

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS TAGS all all-am check check-am clean \
	clean-binPROGRAMS clean-generic cscopelist-am ctags ctags-am \
	distclean distclean-compile distclean-generic distclean-tags \
	distdir dvi dvi-am html html-am info info-am install \
	install-am install-binPROGRAMS install-data install-data-am \
	install-dvi install-dvi-am install-exec install-exec-am \
	install-html install-html-am install-info install-info-am \
	install-man install-pdf install-pdf-am install-ps \
	install-ps-am install-strip installcheck installcheck-am \
	installdirs maintainer-clean maintainer-clean-generic \
	mostlyclean mostlyclean-compile mostlyclean-generic pdf pdf-am \
	ps ps-am tags tags-am uninstall uninstall-am \
	uninstall-binPROGRAMS


# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
